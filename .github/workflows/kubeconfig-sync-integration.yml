name: Kubeconfig-Sync Integration Test

on:
  push:
    paths:
      - 'Makefile'
      - 'scripts/ci/remote-vm.sh'
      - 'scripts/kubeconfig_sync.sh'
      - '.github/workflows/kubeconfig-sync-integration.yml'
  pull_request:
    paths:
      - 'Makefile'
      - 'scripts/ci/remote-vm.sh'
      - 'scripts/kubeconfig_sync.sh'
      - '.github/workflows/kubeconfig-sync-integration.yml'
  workflow_dispatch:

jobs:
  sync-test:
    runs-on: ubuntu-latest
    env:
      SSH_HOST: remote_vm       # → matches container name
      SSH_PORT: 22
      SSH_USER: root
      SSH_KEY_FILE: ${{ github.workspace }}/id_rsa

    steps:
      - uses: actions/checkout@v3

      - name: Generate SSH keypair
        run: |
          ssh-keygen -t rsa -b 2048 -f id_rsa -N ""
          chmod 600 id_rsa

      - name: Provision remote VM & Kind cluster
        run: scripts/ci/remote-vm.sh
        shell: bash

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'v1.27.0'

      - name: Stub scp → docker cp
        run: |
          mkdir -p $HOME/bin
          cat << 'EOF' > $HOME/bin/scp
          #!/usr/bin/env bash
          set -euo pipefail
          echo "⤷ [stub-scp] copying from container to host..."
          docker cp remote_vm:/root/.kube/config /tmp/kubeconfig/remote.config
          EOF
          chmod +x $HOME/bin/scp
          echo "$HOME/bin" >> $GITHUB_PATH

      - name: Run kubeconfig-sync
        run: make kubeconfig-sync

      - name: Verify kubeconfig-sync
        run: |
          echo "⤷ [kubeconfig-sync] verifying..."
          ls -la /tmp/kubeconfig
          echo "⤷ [kubeconfig-sync] sanitized output:"
          sed -E '/certificate-authority-data:|client-certificate-data:|client-key-data:/ s/: .*/: <REDACTED>/' /tmp/kubeconfig/final.config

      - name: List merged contexts
        run: kubectl config get-contexts -o name

      - name: Switch to remote context
        run: kubectl config use-context kind-ci-test

      - name: Verify remote cluster nodes
        run: kubectl get nodes

